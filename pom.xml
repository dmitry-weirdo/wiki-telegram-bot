<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.dmitry-weirdo</groupId>
    <artifactId>wiki-telegram-bot</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Digital Volunteers Wiki Telegram Bot</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <kotlin.version>1.7.20</kotlin.version>

        <log4j2.version>2.17.2</log4j2.version>

        <!-- todo: version 1.2.0 is not uploaded to Maven repo :( -->
        <!--        <log4j2.api.kotlin.version>1.2.0</log4j2.api.kotlin.version>-->
        <log4j2.api.kotlin.version>1.1.0</log4j2.api.kotlin.version>

        <junit-jupiter.version>5.8.2</junit-jupiter.version>

        <notion-sdk.version>1.3.2</notion-sdk.version>

        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <ktlint.version>0.49.0</ktlint.version>
        <detekt.version>1.22.0</detekt.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.telegram</groupId>
            <artifactId>telegrambots</artifactId>
            <version>5.7.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>

        <!-- Kotlin dependency -->
        <!-- see https://kotlinlang.org/docs/maven.html#dependencies -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- to be able tu use #use with the AutoCloseable classes -->
        <!-- see https://www.baeldung.com/kotlin/try-with-resources#closeable -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- Use log4j2 instead of slf4j -->
        <!-- see https://stackoverflow.com/a/41500347/8534088 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api-kotlin</artifactId>
            <version>${log4j2.api.kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

        <!-- dependencies to read from Google Sheets -->
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
<!--            <version>1.23.0</version>-->
            <version>1.33.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client-jetty</artifactId>
<!--            <version>1.23.0</version>-->
            <version>1.33.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-sheets</artifactId>
            <!--            <version>v4-rev493-1.23.0</version>-->
            <version>v4-rev612-1.25.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client-jackson2</artifactId>
            <version>1.33.2</version>
        </dependency>

        <!-- Google Translate API - old version - I failed to make it work -->
<!--
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-translate</artifactId>
            <version>v3-rev20221021-2.0.0</version>
        </dependency>
-->

        <!-- Google Cloud Translate API v3 -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-translate</artifactId>
        </dependency>

        <!-- Additional Jackson dependency for JacksonUtils -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.15.0</version>
        </dependency>

        <!-- Properly serialize and deserialize Kotlin data classes -->
        <!-- see https://github.com/FasterXML/jackson-module-kotlin -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>2.15.0</version>
        </dependency>

        <!-- junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- AssertJ -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.22.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Notion API wrapper for JVM -->
        <dependency>
            <groupId>com.github.seratch</groupId>
            <artifactId>notion-sdk-jvm-core</artifactId>
            <version>${notion-sdk.version}</version>
        </dependency>

        <!-- Fixes the call to Http PATCH method which fails when using the default java.net.http.HttpClient -->
        <dependency>
            <groupId>com.github.seratch</groupId>
            <artifactId>notion-sdk-jvm-okhttp4</artifactId>
            <version>${notion-sdk.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>libraries-bom</artifactId>
                <version>20.9.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <!-- see https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>

                <!-- Enable use Lombok-generated code from Java classes in Kotlin -->
                <!-- see https://github.com/kotlin-hands-on/kotlin-lombok-examples/blob/master/kotlin_lombok_maven/nokapt/pom.xml -->
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-lombok</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M6</version>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.dv.telegram.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>

                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

            <!-- see  https://pinterest.github.io/ktlint/install/integrations/#maven-integration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>ktlint</id>
                        <phase>verify</phase>
                        <configuration>
                            <target name="ktlint">

                                <!-- do not fail on error! -->
                                <java
                                    taskname="ktlint"
                                    dir="${basedir}"
                                    fork="true"
                                    failonerror="false"
                                    classpathref="maven.plugin.classpath"
                                    classname="com.pinterest.ktlint.Main"
                                >
                                    <!-- Note: the JVM arg below is only required when running ktlint with Java 16+ in format mode. -->
                                    <!--<jvmarg value="&#45;&#45;add-opens=java.base/java.lang=ALL-UNNAMED"/>-->
                                    <!-- see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information -->
                                    <arg value="src/**/*.kt"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
<!--
                    <execution>
                        <id>ktlint-format</id>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                                      classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                                    &lt;!&ndash; Note: the JVM args below is only required when running ktlint with Java 16+ in format mode &ndash;&gt;
                                    <jvmarg value="&#45;&#45;add-opens=java.base/java.lang=ALL-UNNAMED"/>
                                    &lt;!&ndash; see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information &ndash;&gt;
                                    <arg value="-F"/>
                                    <arg value="src/**/*.kt"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
-->

                    <!-- see https://detekt.dev/docs/gettingstarted/mavenanttask -->
                    <execution>
                        <!-- This can be run separately with mvn antrun:run@detekt -->
                        <id>detekt</id>
                        <phase>verify</phase>
                        <configuration>
                            <target name="detekt">
                                <!-- do not fail on error! -->
                                <java
                                    taskname="detekt"
                                    dir="${basedir}"
                                    fork="true"
                                    failonerror="false"
                                    classname="io.gitlab.arturbosch.detekt.cli.Main"
                                    classpathref="maven.plugin.classpath"
                                >
                                    <arg value="--input"/>
                                    <arg value="${basedir}/src/main/kotlin"/>
                                    <arg value="--excludes"/>
                                    <arg value="**/special/package/internal/**"/>
                                    <arg value="--report"/>
                                    <arg value="xml:${basedir}/.ignoreme/detekt/reports/detekt.xml"/>
                                    <arg value="--config"/>
                                    <arg value="${basedir}/detekt.yml"/>
                                    <arg value="--build-upon-default-config"/> <!-- see https://detekt.dev/docs/introduction/configurations/ -->
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                </executions>

                <dependencies>
                    <dependency>
                        <groupId>com.pinterest</groupId>
                        <artifactId>ktlint</artifactId>
                        <version>${ktlint.version}</version>
                    </dependency>
                    <!-- additional 3rd party ruleset(s) can be specified here -->

                    <!-- see https://detekt.dev/docs/gettingstarted/mavenanttask -->
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-cli</artifactId>
                        <version>${detekt.version}</version>
                    </dependency>
                </dependencies>

            </plugin>

        </plugins>
    </build>

</project>
